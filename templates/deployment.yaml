apiVersion: apps/v1
kind: Deployment
metadata:
  # Full release-specific name for the deployment
  name: {{ include "incloud-web.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    # Standard Helm chart and application labels
    {{- include "incloud-web.labels" . | nindent 4 }}
spec:
  # Desired number of replicas
  replicas: {{ .Values.replicaCount }}

  selector:
    matchLabels:
      # Label selector to match pods of this deployment
      {{- include "incloud-web.selectorLabels" . | nindent 6 }}

  strategy:
    # Rolling update strategy configuration
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  template:
    metadata:
      labels:
        # Base pod labels
        {{- include "incloud-web.selectorLabels" . | nindent 8 }}
        # Additional pod labels from values.yaml
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Extra labels from extraTemplateMetadata.labels
        {{- with .Values.extraTemplateMetadata.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        # Pod annotations
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # Extra annotations from extraTemplateMetadata.annotations
        {{- with .Values.extraTemplateMetadata.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

    spec:
      # ServiceAccount used by the pod
      serviceAccountName: {{ include "incloud-web.serviceAccountName" . }}

      # Priority class for scheduling
      priorityClassName: {{ .Values.priorityClassName | quote }}

      # Pod-level security context (render only when enabled; drop 'enabled' key)
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}

      # Image pull secrets
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # Networking and scheduling options
      dnsPolicy: {{ .Values.dnsPolicy }}
      hostNetwork: {{ .Values.hostNetwork }}
      hostPID: {{ .Values.hostPID }}
      hostIPC: {{ .Values.hostIPC }}
      {{- with .Values.runtimeClassName }}
      runtimeClassName: {{ . | quote }}
      {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- with .Values.preemptionPolicy }}
      preemptionPolicy: {{ . | quote }}
      {{- end }}
      schedulerName: {{ .Values.schedulerName | quote }}

      # Node placement
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # Volumes: user-defined + NGINX config (if enabled)
      {{- if or .Values.volumes .Values.nginx.enabled }}
      volumes:
        # User-defined volumes
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        # NGINX config from ConfigMap
        {{- if .Values.nginx.enabled }}
        - name: configuration-nginx-file
          configMap:
            defaultMode: 420
            name: {{ default (printf "%s-nginx-config" (include "incloud-web.fullname" .)) .Values.nginx.configMapName }}
          {{- if (eq .Values.internalTLS.certSource "certmanager") }}
        - name: internal-cert
          secret:
            defaultMode: 420
            secretName: {{ .Release.Name }}-cert-internal-tls
          {{- end }}
          {{- if (eq .Values.internalTLS.certSource "secret") }}
        - name: dex-cert
          secret:
            defaultMode: 420
            secretName: {{ .Values.internalTLS.secret.dex.secretName }}
        - name: oauth2-proxy-cert
          secret:
            defaultMode: 420
            secretName: {{ index (index .Values.internalTLS.secret "oauth2-proxy") "secretName" }}
          {{- end }}
        {{- end }}
      {{- end }}

      containers:
        # -------------------- BFF Container --------------------
        {{- if .Values.bff.enabled }}
        - name: {{ .Values.bff.name }}
          image: "{{ .Values.bff.image.repository }}:{{ .Values.bff.image.tag }}"
          imagePullPolicy: {{ .Values.bff.image.pullPolicy }}

          # Ports
          ports:
            - name: http
              containerPort: {{ .Values.bff.containerPort }}
              protocol: TCP
            {{- with .Values.bff.extraContainerPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          # Env
          {{- with .Values.bff.env }}
          env:
            {{- include "incloud-web.env" . | nindent 12 }}
          {{- end }}
          {{- with .Values.bff.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          # Probes (enabled-gated, 'enabled' key stripped)
          {{- if .Values.bff.livenessProbe.enabled }}
          livenessProbe:
            {{- omit .Values.bff.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.bff.readinessProbe.enabled }}
          readinessProbe:
            {{- omit .Values.bff.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Security context (enabled-gated, 'enabled' key stripped)
          {{- if .Values.bff.securityContext.enabled }}
          securityContext:
            {{- omit .Values.bff.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Resources / mounts
          {{- with .Values.bff.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.bff.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          terminationMessagePath: {{ .Values.bff.terminationMessagePath | quote }}
          terminationMessagePolicy: {{ .Values.bff.terminationMessagePolicy | quote }}
        {{- end }}

        # -------------------- WEB Container --------------------
        {{- if .Values.web.enabled }}
        - name: {{ .Values.web.name }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}

          # Ports
          ports:
            - name: http
              containerPort: {{ .Values.web.containerPort }}
              protocol: TCP
            {{- with .Values.web.extraContainerPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          # Env
          {{- with .Values.web.env }}
          env:
            {{- include "incloud-web.env" . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          # Probes (enabled-gated, 'enabled' key stripped)
          {{- if .Values.web.livenessProbe.enabled }}
          livenessProbe:
            {{- omit .Values.web.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.web.readinessProbe.enabled }}
          readinessProbe:
            {{- omit .Values.web.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Security context (enabled-gated, 'enabled' key stripped)
          {{- if .Values.web.securityContext.enabled }}
          securityContext:
            {{- omit .Values.web.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Resources / mounts
          {{- with .Values.web.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          terminationMessagePath: {{ .Values.web.terminationMessagePath | quote }}
          terminationMessagePolicy: {{ .Values.web.terminationMessagePolicy | quote }}
        {{- end }}

        # -------------------- NGINX Container --------------------
        {{- if .Values.nginx.enabled }}
        - name: {{ .Values.nginx.name }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}

          # Ports
          ports:
            - name: http
              containerPort: {{ .Values.nginx.containerPort }}
              protocol: TCP
            {{- with .Values.nginx.extraContainerPorts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          # Mount NGINX configuration from ConfigMap
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: configuration-nginx-file
              subPath: nginx-config
            {{- if (eq .Values.internalTLS.certSource "certmanager") }}
            - mountPath: /etc/nginx/certs/internal
              name: internal-cert
            {{- end }}
            {{- if (eq .Values.internalTLS.certSource "secret") }}
            - mountPath: /etc/nginx/certs/dex
              name: dex-cert
            - mountPath: /etc/nginx/certs/oauth2-proxy
              name: oauth2-proxy-cert
            {{- end }}
            {{- with .Values.nginx.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          # Env
          {{- with .Values.nginx.env }}
          env:
            {{- include "incloud-web.env" . | nindent 12 }}
          {{- end }}
          {{- with .Values.nginx.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          # Probes (enabled-gated, 'enabled' key stripped)
          {{- if .Values.nginx.livenessProbe.enabled }}
          livenessProbe:
            {{- omit .Values.nginx.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.nginx.readinessProbe.enabled }}
          readinessProbe:
            {{- omit .Values.nginx.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Security context (enabled-gated, 'enabled' key stripped)
          {{- if .Values.nginx.securityContext.enabled }}
          securityContext:
            {{- omit .Values.nginx.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}

          # Resources
          {{- with .Values.nginx.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          terminationMessagePath: {{ .Values.nginx.terminationMessagePath | quote }}
          terminationMessagePolicy: {{ .Values.nginx.terminationMessagePolicy | quote }}
        {{- end }}

      # Extra raw PodSpec fields (if provided)
      {{- with .Values.extraPodSpec }}
      {{- toYaml . | nindent 6 }}
      {{- end }}