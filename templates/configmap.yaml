apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ default (printf "%s-nginx-config" (include "incloud-web.fullname" .)) .Values.nginx.configMapName }}
  namespace: {{ .Release.Namespace }}
data:
  nginx-config: |-
    # Handle WebSocket upgrade headers
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
      # Default server listening on specified port (IPv4 and IPv6)
      listen       {{ .Values.nginx.containerPort }} default_server;
      listen       [::]:{{ .Values.nginx.containerPort }} default_server;
      server_name  _;

      # Serve static JSON for cluster listing
      location ~ ^(/clusterlist|/api/clusters)$ {
        add_header Content-Type application/json;
        set $cluster_list '[{"api":"default","baseDomain":"","description":"default","externalDomain":"","name":"default","tenant":"dev"}]';
        return 200 $cluster_list;
      }

      # Proxy /api/clusters/default to istio-ingressgateway with path rewrite
      location /api/clusters/default {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $host;
          proxy_read_timeout 86400s;
          proxy_send_timeout 86400s;

          # Remove prefix before proxying
          rewrite /api/clusters/default/(.*) /$1 break;
          proxy_pass http://127.0.0.1:{{ .Values.nginx.containerPort }};
      }

      # Proxy /k8s requests to Kubernetes API server
      location /k8s {
          # Remove /k8s prefix
          rewrite /k8s/(.*) /$1 break;
          proxy_pass https://kubernetes.default.svc:443;
      }

      # Proxy /openapi-bff to backend (BFF container)
      location /openapi-bff {
          proxy_pass http://127.0.0.1:{{ .Values.bff.containerPort }};
      }

      # WebSocket proxy for BFF (e.g., event streams)
      location /openapi-bff-ws/ {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Host $host;
          proxy_read_timeout 86400s;
          proxy_send_timeout 86400s;

          proxy_pass http://127.0.0.1:{{ .Values.bff.containerPort }};
      }

      # Default route: serve frontend app from Web container
      location / {
          proxy_pass http://127.0.0.1:{{ .Values.web.containerPort }};
      }

      # Healthcheck endpoint
      location /healthcheck {
          access_log off;
          return 200 "Healthy\n";
      }
    }