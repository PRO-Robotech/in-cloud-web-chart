apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ default (printf "%s-nginx-config" (include "incloud-web.fullname" .)) .Values.nginx.configMapName }}
  namespace: {{ .Release.Namespace }}
data:
  nginx-config: |-
    # Map for WebSocket Upgrade header
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    server {
      listen       {{ .Values.nginx.containerPort }} default_server;
      listen       [::]:{{ .Values.nginx.containerPort }} default_server;
      server_name  _;

      # --- Common proxy settings (inherited by all locations) -----------------
      proxy_http_version               1.1;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout            30s;
      proxy_send_timeout               86400s;
      proxy_read_timeout               86400s;

      # --- /clusterlist and /api/clusters: static JSON response ---------------
      location ~ ^/(clusterlist|api/clusters)$ {
        default_type application/json;
        add_header Cache-Control "no-store";
        return 200 '[{"api":"kubernetes.default.svc","baseDomain":"","description":"Default Kubernetes cluster","externalDomain":"","name":"default","tenant":"dev"}]';
      }

      # --- Proxy to in-cluster gateway (strip prefix; avoid loop) -------------
      # /api/clusters/default â†’ forward to the WEB container
      location ^~ /api/clusters/default/ {
        rewrite ^/api/clusters/default/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:{{ .Values.nginx.containerPort }}/;   # trailing slash pairs with rewrite
      }

      # --- Proxy to kube-apiserver -------------------------------------------
      location ^~ /k8s/ {
        proxy_set_header Authorization $http_authorization; # pass-through auth
        rewrite ^/k8s/(.*)$ /$1 break;
        proxy_pass https://kubernetes.default.svc:443/;     # trailing slash with rewrite
        proxy_ssl_server_name on;
      }

      # --- Backend BFF (HTTP) -------------------------------------------------
      location ^~ /openapi-bff/ {
        proxy_pass http://127.0.0.1:{{ .Values.bff.containerPort }};
      }

      # --- Backend BFF (WebSocket) -------------------------------------------
      location ^~ /openapi-bff-ws/ {
        proxy_set_header Upgrade   $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_buffering off;
        proxy_pass http://127.0.0.1:{{ .Values.bff.containerPort }};
      }

      # --- Frontend service (default route) -----------------------------------
      location / {
        proxy_pass http://127.0.0.1:{{ .Values.web.containerPort }};
      }

      # --- Healthcheck endpoint -----------------------------------------------
      location = /healthcheck {
        access_log off;
        default_type text/plain;
        return 200 "Healthy\n";
      }
    }