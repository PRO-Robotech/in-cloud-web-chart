
# --- Dependency ----------------------------------------------------------------
incloudWebResources:
  enabled: true

# --- Global ----------------------------------------------------------------
nameOverride: ""                  # Overrides chart name; leave empty to use default
fullnameOverride: "" # Overrides full release name; leave empty to use default

# Number of pod replicas
replicaCount: 1

# Pull secrets for private registries
imagePullSecrets: []               # e.g. [{ name: regcred }]

# Priority class for the pod
priorityClassName: system-cluster-critical

# --- ServiceAccount --------------------------------------------------------
serviceAccount:
  create: true
  name: ""                         # Defaults to <release>-<chart>
  annotations: {}

# --- Pod-level settings ----------------------------------------------------
podAnnotations: {}
podLabels: {}
podSecurityContext:
  enabled: true
  fsGroup: 101
  fsGroupChangePolicy: "OnRootMismatch"

# Node placement settings
nodeSelector: {}
tolerations: []
topologySpreadConstraints: []

# Networking-related pod spec
dnsPolicy: ClusterFirst
hostNetwork: false
hostPID: false
hostIPC: false
schedulerName: default-scheduler
runtimeClassName: ""
enableServiceLinks: false
preemptionPolicy: ""

# Volumes (user-defined; appended with nginx config if enabled)
volumes: []


# --- Service ---------------------------------------------------------------
service:
  enabled: true
  type: ClusterIP
  annotations: {}
  labels: {}
  ports:
    - name: web-http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: nginx-http
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: bff-http
      port: 8082
      targetPort: 8082
      protocol: TCP

# --- Container: bff --------------------------------------------------------
bff:
  enabled: true
  name: bff
  image:
    repository: prorobotech/openapi-ui-k8s-bff
    tag: main-e188569a
    pullPolicy: IfNotPresent
  containerPort: 8082
  extraContainerPorts: []
  env:
    BASE_API_GROUP: "front.in-cloud.io"
    BASE_API_VERSION: "v1alpha1"
    DEBUG_CONTAINER_IMAGE: "nicolaka/netshoot:v0.13"
    LOGGER: "TRUE"
    LOGGER_WITH_HEADERS: "TRUE"
    PORT: "8082"
    KUBE_API_URL: https://kubernetes.default.svc
  envFrom: []
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi
      ephemeral-storage: 50Mi
  securityContext:
    enabled: true
    allowPrivilegeEscalation: false
    capabilities:
      add: ["CAP_CHOWN","CAP_NET_BIND_SERVICE","CAP_SETGID","CAP_SETUID"]
      drop: ["ALL"]
    privileged: false
    readOnlyRootFilesystem: false
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 101
  livenessProbe:
    enabled: true
    httpGet:
      path: /healthcheck
      port: 8082
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: false
    httpGet:
      path: /ready
      port: 8082
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  volumeMounts: []
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File

# --- Container: web --------------------------------------------------------
web:
  enabled: true
  name: web
  image:
    repository: prorobotech/openapi-ui
    tag: main-8d4a0651
    pullPolicy: IfNotPresent
  containerPort: 8080
  extraContainerPorts: []
  env:
    BASEPREFIX: "/openapi-ui"
    CUSTOMIZATION_API_GROUP: "front.in-cloud.io"
    CUSTOMIZATION_API_VERSION: "v1alpha1"
    CUSTOMIZATION_NAVIGATION_RESOURCE: "navigation"
    CUSTOMIZATION_NAVIGATION_RESOURCE_NAME: "navigations"
    INSTANCES_API_GROUP: "in-cloud.io"
    INSTANCES_RESOURCE_NAME: "instances"
    INSTANCES_VERSION: "v1alpha1"
    LOGIN_URL: "/oauth/token"
    LOGIN_USERNAME_FIELD: "name"
    LOGOUT_URL: "/oauth/logout"
    MARKETPLACE_GROUP: "front.in-cloud.io"
    MARKETPLACE_KIND: "MarketplacePanel"
    MARKETPLACE_RESOURCE_NAME: "marketplacepanels"
    MARKETPLACE_VERSION: "v1alpha1"
    NAVIGATE_FROM_CLUSTERLIST: "/openapi-ui/~recordValue~/builtin-table/pods"
    NODE_TERMINAL_DEFAULT_PROFILE: "general"
    PROJECTS_API_GROUP: "in-cloud.io"
    PROJECTS_RESOURCE_NAME: "projects"
    PROJECTS_VERSION: "v1alpha1"
    USE_NAMESPACE_NAV: true
  envFrom: []
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
      ephemeral-storage: 50Mi
  securityContext:
    enabled: true
    allowPrivilegeEscalation: false
    capabilities:
      add: ["CAP_CHOWN","CAP_NET_BIND_SERVICE","CAP_SETGID","CAP_SETUID"]
      drop: ["ALL"]
    privileged: false
    readOnlyRootFilesystem: false
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 101
  livenessProbe:
    enabled: true
    httpGet:
      path: /healthcheck
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: false
    httpGet:
      path: /ready
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  volumeMounts: []
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File

# --- Container: nginx (reverse proxy) --------------------------------------
nginx:
  enabled: true
  name: nginx
  image:
    repository: nginxinc/nginx-unprivileged
    tag: "1.29-alpine"
    pullPolicy: IfNotPresent
  containerPort: 8081
  extraContainerPorts: []
  configMapName: ""        # Defaults to "<fullname>-nginx-config"
  configKey: "nginx-config"
  env: {}
  envFrom: []
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi
      ephemeral-storage: 50Mi
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: false
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 101
    seccompProfile:
      type: RuntimeDefault
  livenessProbe:
    enabled: true
    httpGet:
      path: /healthcheck
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    enabled: false
    httpGet:
      path: /ready
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 3
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3
  extraVolumeMounts: []
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File

# --- Labels/Selectors ------------------------------------------------------
selectorLabels:
  app.kubernetes.io/name: web

# --- Extra customizations --------------------------------------------------
extraPodSpec: {}
extraTemplateMetadata:
  annotations: {}
  labels: {}
